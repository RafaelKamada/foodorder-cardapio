name: Test and Report Coverage

on:
  push:
    branches:
      - fase_4_b
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install .NET 6.0 (for Coveralls)
        run: |
          wget https://packages.microsoft.com/config/ubuntu/22.04/prod.list
          sudo mv prod.list /etc/apt/sources.list.d/dotnet-prod.list
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0
          dotnet --version

      - name: Install dependencies
        run: dotnet restore FoodOrder_Cardapio.sln

      - name: Build
        run: dotnet build FoodOrder_Cardapio.sln --no-restore

      - name: Run tests and collect coverage
        run: |
          dotnet test FoodOrder_Cardapio.sln \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory ./Tests/Coverage/XML


      - name: Move coverage to fixed directory
        run: |
          mkdir -p ./Tests/Coverage/XML
          mv ./Tests/Coverage/XML/**/coverage.cobertura.xml ./Tests/Coverage/XML/coverage.cobertura.xml

      - name: Confirm Repository Structure
        run: |
          echo "Diretório do repositório:"
          ls -la $(pwd)
          
      - name: List coverage files
        run: ls -lR ./Tests/Coverage/

      - name: find coverage files
        run: find ./Tests/Coverage -type f
        
      - name: Verify coverage file content
        run: cat ./Tests/Coverage/XML/coverage.cobertura.xml

      - name: Fetch all history for Coveralls
        run: git fetch --unshallow || true

      - name: Set up Git for Coveralls
        run: |
          git config --global --add safe.directory $(pwd)
          git fetch --unshallow || true

      - name: Generate HTML Report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator \
            -reports:"./Tests/Coverage/XML/coverage.cobertura.xml" \
            -targetdir:"./Tests/Coverage/Report" \
            -reporttypes:Html

      - name: Check Current Directory
        run: pwd
      
      - name: Check Repository Directory Structure
        run: |
          echo "Verificando estrutura do repositório..."
          echo "Diretório atual:"
          pwd
          echo "Arquivos no diretório base:"
          ls -la $(pwd)
          echo "Estrutura dos arquivos de código:"
          find $(pwd)/Application
          find $(pwd)/Domain

      - name: Remove <sources> from coverage report
        run: sed -i '/<sources>/,/<\/sources>/d' ./Tests/Coverage/XML/coverage.cobertura.xml

      - name: Verify coverage file content 2
        run: cat ./Tests/Coverage/XML/coverage.cobertura.xml

      - name: Install and run Coveralls
        run: |
          dotnet tool install --global coveralls.net
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
          export PATH="$HOME/.dotnet/tools:$PATH"
          ls -la ./Tests/Coverage/XML/
          csmacnz.Coveralls \
            --opencover \
            -i ./Tests/Coverage/XML/coverage.cobertura.xml \
            --repoToken "${{ secrets.COVERALLS_REPO_TOKEN }}" \
            --commitId "${{ github.sha }}" \
            --commitBranch "${{ github.ref_name }}"  \
            --serviceName "github" \
            --jobId "${{ github.run_id }}" \
            --basePath .
